"use strict";

// Imports
const isNegative = require("./isNegative.js");
const isNumber = require("./isNumber.js");
const parse = require("../utils/parse.js");
const positive = require("./positive.js");
const isZero = require("./isZero.js");

/**
 * Compares two number-like values
 * @param {string|number} a Number-like value
 * @param {string|number} b Number-like value
 * @returns {-1|0|1}
 */
function compare(a, b) {
    if(!isNumber(a) || !isNumber(b)) throw new TypeError("Argument is not a number-like value");
    if(isZero(a) && isZero(b)) return 0;
    let pa = parse(a, true), pb = parse(b, true), n = pa[0] === "-";
    let c = (daa, dab) => {
        while(daa.length || dab.length) {
            let [ da, db ] = [ daa, dab ].map(da => +(da.shift() || "0"));
            if(da < db) return n ? 1 : -1;
            else if(da > db) return n ? -1 : 1;
        };
        return 0;
    };
    if(pa[0] !== pb[0]) return n ? -1 : 1;
    else if(pa[1] === pb[1]) return c(pa[2].split(""), pb[2].split(""))
    else {
        let f = pa[1].length - pb[1].length;
        if(isNegative(f)) pa[1] = "0".repeat(+positive(f)) + pa[1];
        else pb[1] = "0".repeat(+f) + pb[1];
        return c(pa[1].split(""), pb[1].split(""));
    };
};

// Exports
module.exports = compare;